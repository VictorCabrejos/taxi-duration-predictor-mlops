# Pytest Configuration for MLOps Project
# Configuraci√≥n para testing con pytest + coverage + MLOps

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for different test types
markers =
    unit: Unit tests for domain logic (no external dependencies)
    integration: Integration tests with external systems (MLflow, DB)
    e2e: End-to-end tests for complete workflows
    slow: Tests that take longer to execute
    model: Tests specifically for ML model functionality
    api: Tests for API endpoints
    dashboard: Tests for Streamlit dashboard

# Test execution options
addopts =
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=taxi_duration_predictor
    --cov-report=html:tests/reports/coverage_html
    --cov-report=xml:tests/reports/coverage.xml
    --cov-report=term-missing
    --junit-xml=tests/reports/junit.xml
    --html=tests/reports/report.html
    --self-contained-html

# Coverage configuration
[coverage:run]
source = taxi_duration_predictor
omit =
    */tests/*
    */venv/*
    */virtualenv/*
    */__pycache__/*
    */migrations/*
    */settings/*
    manage.py
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

# Test environment
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
