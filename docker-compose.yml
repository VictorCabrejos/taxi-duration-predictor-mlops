version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: taxi-predictor-db
    environment:
      POSTGRES_DB: taxi_duration
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - taxi-network

  # MLflow Tracking Server
  mlflow:
    image: python:3.9-slim
    container_name: taxi-predictor-mlflow
    working_dir: /app
    command: >
      bash -c "
        pip install mlflow[extras] psycopg2-binary &&
        mlflow server
          --backend-store-uri sqlite:///mlflow.db
          --default-artifact-root ./mlruns
          --host 0.0.0.0
          --port 5000
      "
    volumes:
      - mlflow_data:/app/mlruns
      - ./mlflow.db:/app/mlflow.db
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - taxi-network

  # FastAPI Server
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: taxi-predictor-api
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/taxi_duration
      MLFLOW_TRACKING_URI: http://mlflow:5000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      mlflow:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - taxi-network
    restart: unless-stopped

  # Streamlit Dashboard
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    container_name: taxi-predictor-dashboard
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/taxi_duration
      MLFLOW_TRACKING_URI: http://mlflow:5000
      API_BASE_URL: http://api:8000
    ports:
      - "8501:8501"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - taxi-network
    restart: unless-stopped

volumes:
  postgres_data:
  mlflow_data:

networks:
  taxi-network:
    driver: bridge
